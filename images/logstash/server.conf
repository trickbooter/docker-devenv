input {
  redis {
    host => "server"
    type => "redis-input"
    data_type => "list"
    key => "logstash"
    threads => 1
    batch_count => 1
  }
}

filter {

  # nice general purpose parser of fields from log lines, but creates too many fields
  kv {
    #source => "@message"
    field_split => " &?,\[\]{}"
    value_split => "="
    include_keys => ["userid","dsid","name","type","path","addr","duration","size","count", "listid", "memberid", "contributionType"]
  }

  # always make some fields a certain type
  mutate {
    convert => [ "duration", "integer" ]
    convert => [ "size", "integer" ]
    convert => [ "count", "integer" ]
  }

  #java multiline exceptions as one message
  multiline {
    #type => "all" # no type means for all inputs
    pattern => "(^.+Exception: .+)|(^\s+at .+)|(^\s+... \d+ more)|(^\s*Caused by:.+)|(^\s*nested exception is:)"
    what => "previous"
  }
}


output {
  #elasticsearch_http {
  #  host => "server"
  #}
  stdout { debug => true debug_format => "json"}
}
